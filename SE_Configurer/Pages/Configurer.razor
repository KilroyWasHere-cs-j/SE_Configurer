@page "/Configurer"
@using SE_Configurer.Components
@using SE_Configurer.Data

<div class="body">
    <div class="controls">
        <h1>Configurer</h1>
        <p>Name of the current active configuration: @configurationName</p>
        <input type="text" @bind="configurationName" placeholder="Configuration Name" />
        <input type="text" @bind="defaultComboBoxText" placeholder="Default ComboBox Text" />
        <input type="text" @bind="clickCountLabel" placeholder="Click Count Label" />

        <button class="createConfig" @onclick="CreateConfig">Create new config</button>
    </div>

    <div class="vBuf" />

    <div class="config">
        <h1>Trackables</h1>
        
        <div class="auto">
            <h2>Autonomous</h2>

            @foreach (Trackable trackable in autoTrackablesList)
            {
                <div><CTrackable Trackable=trackable /></div>
            }

            <input type="text" @bind=autoTrackableTitle placeholder="Trackable Name" />
            <input type="text" @bind=autoTrackableItemsHold placeholder="Trackable Fill" />

            <button class="addTrackable" @onclick="AddAutoTrackable">Add Trackable</button>

        </div>

        <div class="teleop">
            <h2>Teleoporated</h2>

            <ul>
                @foreach(Trackable trackable in teleopTrackablesList)
                {
                    <li><CTrackable Trackable=trackable/></li>
                }
            </ul>

            <input type="text" @bind=teleopTrackableTitle placeholder="Trackable Name" />
            <input type="text" @bind=teleopTrackableItemsHold placeholder="Trackable Fill" />

            <button class="addTrackable" @onclick="AddTeleopTrackable">Add Trackable</button>
        </div>
    </div>
</div>

@code {
    Configuration config = new Configuration();

    // Stores the name of the current configuration
    private string configurationName = "";
    private string AppName = "ScoutEyeEX";
    private string AppVersion = "v2.5.4EX";
    private string defaultComboBoxText = "0";
    private string clickCountLabel = "Click Count: ";

    // Hold over variables for auto trackable creation
    private string autoTrackableTitle = "";
    private string autoTrackableItemsHold = "";

    // Hold over variables for teleop trackable creation
    private string teleopTrackableTitle = "";
    private string teleopTrackableItemsHold = "";

    // Creates lists to store user created trackables
    private List<Trackable> autoTrackablesList = new List<Trackable>();
    private List<Trackable> teleopTrackablesList = new List<Trackable>();

    // Complies all trackables into a single object
    private void CreateConfig()
    {
        // If the user did not enter a configuration name, randomly select one from a wonderful list of fun fish names
        if(configurationName == "" || configurationName == null)
        {
            string[] configNames = { "Mahi mahi", "Buoyant Betta", "Crazy Carp", "Frolicking Flounder", "Opulent Oscar", "Tilted Tilpia", "Goody Goodei", "Dancing Dottyback" };

            Random rnd = new Random();
            configurationName = configNames[rnd.Next(0, configNames.Length)];
        }

        // Creates a new configuration object

        // Sets the configuration's title and trackables to the user input
        config.Title = configurationName;
        config.Trackables = autoTrackablesList.Concat(teleopTrackablesList).ToList();
        
        // Converts the configuration object to a JSON string
        var json = Newtonsoft.Json.JsonConvert.SerializeObject(config);
        Console.WriteLine(json);
    }

    // Adds a trackable to the auto trackable list
    private void AddAutoTrackable()
    {
        // Creates a new trackable object
        Trackable trackable = new Trackable();

        // Sets the trackable's title and items held to the user input
        trackable.Title = autoTrackableTitle;
        trackable.Items = autoTrackableItemsHold.Split(',');

        Console.WriteLine("Auto Trackable Title: " + trackable.Title);
        foreach(string item in trackable.Items)
        {
            Console.WriteLine("Auto Item: " + item);
        }

        // Adds the trackable to the auto trackable list
        autoTrackablesList.Add(trackable);
    }

    // Adds a trackable to the teleop trackable list
    private void AddTeleopTrackable()
    {
        // Creates a new trackable object
        Trackable trackable = new Trackable();

        // Sets the trackable's title and items held to the user input
        trackable.Title = teleopTrackableTitle;
        trackable.Items = teleopTrackableItemsHold.Split(',');

        Console.WriteLine("Teleop Trackable Title: " + trackable.Title);
        foreach(string item in trackable.Items)
        {
            Console.WriteLine("Teleop Item: " + item);
        }

        // Adds the trackable to the teleop trackable list
        teleopTrackablesList.Add(trackable);
    }
}